import numpy as npimport matplotlib.pyplot as pltimport scipy.fftpack def FFT(x, fs):    N = len(x)     X_fft = scipy.fftpack.fft(x)     X_fft_shifted = scipy.fftpack.fftshift(X_fft)     freq = np.arange(-N/2, N/2) * fs/N     X_mag = np.abs(X_fft_shifted)/N    X_phi = np.angle(X_fft_shifted)    return freq, X_mag, X_phi#Task 1fs = 100T = 1/fst = np.arange(0, 2, T)X1 = np.cos(2*np.pi*t)F1, Mag1, Phi1 = FFT(X1, fs)plt.figure(figsize = (7, 5))plt.subplot(3, 1, 1)plt.plot(t, X1)plt.grid()plt.ylabel('X1(t)')plt.title('Task 1')plt.subplot(3, 2, 3)plt.stem(F1, Mag1)plt.grid()plt.ylabel('Magnitude')plt.subplot(3, 2, 4)plt.stem(F1, Mag1)plt.grid()plt.xlim(-3, 3)plt.subplot(3, 2, 5)plt.stem(F1, Phi1) plt.grid()plt.ylabel('Phase (deg)')plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F1, Phi1)plt.grid()plt.xlim(-3, 3)plt.xlabel('F(Hz)')#Task 2X2 = 5*np.sin(2*np.pi*t)F2, Mag2, Phi2 = FFT(X2, fs)plt.figure(figsize = (7, 5))plt.subplot(3, 1, 1)plt.plot(t, X2)plt.grid()plt.title('Task2')plt.ylabel('X2(t)')plt.xlabel('t')plt.subplot(3, 2, 3)plt.stem(F2, Mag2)plt.grid()plt.ylabel('Magnitude')plt.subplot(3, 2, 4)plt.stem(F2, Mag2)plt.grid()plt.xlim(-3, 3)plt.subplot(3, 2, 5)plt.stem(F2, Phi2) plt.grid()plt.ylabel('Phase (deg)')plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F2, Phi2)plt.xlim(-3, 3)plt.grid()plt.xlabel('F(Hz)')#Task 3X3= 2*np.cos((2*np.pi*2*t)-2) + (np.sin((2*np.pi*6*t)+3))**2F3, Mag3, Phi3 = FFT(X3, fs)plt.figure(figsize = (7, 5))plt.subplot(3, 1, 1)plt.plot(t, X3)plt.grid()plt.title('Task 3')plt.ylabel('X3(t)')plt.xlabel('t)')plt.subplot(3, 2, 3)plt.stem(F3, Mag3)plt.ylabel('Magnitude')plt.grid()plt.subplot(3, 2, 4)plt.stem(F3, Mag3)plt.grid()plt.xlim(-12, 12)#Plot the phaseplt.subplot(3, 2, 5)plt.stem(F3, Phi3) plt.grid()plt.ylabel('Phase (deg)')plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F3, Phi3)plt.xlim(-15, 15)plt.xlabel('F(Hz)')plt.grid()#Task 4def FFT2(x, fs):    N = len(x)     X_fft = scipy.fftpack.fft(x)     X_fft_shifted = scipy.fftpack.fftshift(X_fft)     freq = np.arange(-N/2, N/2) * fs/N     X_mag = np.abs(X_fft_shifted)/N    X_phi = np.angle(X_fft_shifted)    for n in range(len(X_phi)):        if np.abs(X_mag[n]) < 1e-10:            X_phi[n] = 0    return freq, X_mag, X_phiX1 = np.cos(2*np.pi*t)F1, Mag1, Phi1 = FFT2(X1, fs)plt.figure(figsize = (7, 5))plt.subplot(3, 1, 1)plt.plot(t, X1)plt.grid()plt.ylabel('X1(t)')plt.title('Task 4 X1(t)')plt.subplot(3, 2, 3)plt.stem(F1, Mag1)plt.grid()plt.ylabel('Mag')plt.subplot(3, 2, 4)plt.stem(F1, Mag1)plt.xlim(-3, 3)plt.grid()plt.subplot(3, 2, 5)plt.stem(F1, Phi1) plt.ylabel('Phase (deg)')plt.grid()plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F1, Phi1)plt.xlim(-3, 3)plt.grid()plt.xlabel('F(Hz)')X2 = 5*np.sin(2*np.pi*t)F2, Mag2, Phi2 = FFT2(X2, fs)plt.figure(figsize = (7, 5))plt.subplot(3, 1, 1)plt.plot(t, X2)plt.grid()plt.title('Task 4 X2(t)')plt.ylabel('X2(t)')plt.xlabel('t')plt.subplot(3, 2, 3)plt.stem(F2, Mag2)plt.grid()plt.ylabel('Magnitude')plt.subplot(3, 2, 4)plt.stem(F2, Mag2)plt.grid()plt.xlim(-3, 3)plt.subplot(3, 2, 5)plt.stem(F2, Phi2) plt.grid()plt.ylabel('Phase (deg)')plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F2, Phi2)plt.xlim(-3, 3)plt.grid()plt.xlabel('F(Hz)')X3= 2*np.cos((2*np.pi*2*t)-2) + (np.sin((2*np.pi*6*t)+3))**2F3, Mag3, Phi3 = FFT2(X3, fs)plt.figure(figsize = (7, 5))plt.subplot(3, 1, 1)plt.plot(t, X3)plt.grid()plt.title('Task 4 X3(t)')plt.ylabel('X3(t)')plt.xlabel('t)')plt.subplot(3, 2, 3)plt.stem(F3, Mag3)plt.ylabel('Magnitude')plt.grid()plt.subplot(3, 2, 4)plt.stem(F3, Mag3)plt.grid()plt.xlim(-12, 12)plt.subplot(3, 2, 5)plt.stem(F3, Phi3) plt.grid()plt.ylabel('Phase (deg)')plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F3, Phi3)plt.xlim(-15, 15)plt.xlabel('F(Hz)')plt.grid()#Task 5steps = 1e-3 t = np. arange (0, 16 + steps , steps )N=15T = 8def FS(N, T, t):     y = np. zeros (t. shape )     for k in np.arange(1, N+1):        b =  2*(1-np.cos(k*np.pi))/(k*np.pi)        S = b*np.sin(k*2*np.pi*t/T)        y += S    return y X15=FS(N, T, t)F5, Mag5, Phi5 = FFT(X15, fs)plt.figure(figsize = (7, 5))#plot X15plt.subplot(3, 1, 1)plt.plot(t, X15)plt.grid()plt.title('Task 5')plt.ylabel('X15(t)')plt.xlabel('t)')#Plot the magnitudeplt.subplot(3, 2, 3)plt.stem(F5, Mag5)plt.grid()plt.ylabel('Magnitude')plt.subplot(3, 2, 4)plt.stem(F5, Mag5)plt.grid()plt.xlim(-3, 3)#Plot the phaseplt.subplot(3, 2, 5)plt.stem(F5, Phi5)plt.grid() plt.ylabel('Phase (deg)')plt.xlabel('F(Hz)')plt.subplot(3, 2, 6)plt.stem(F5, Phi5)plt.grid()plt.xlabel('F(Hz)')plt.xlim(-3, 3)plt.show()